{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Utilisateur/Desktop/projet_angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport * as i0 from \"@angular/core\";\nexport class CommandeService {\n  constructor() {}\n\n  ajouterCommande(livres) {\n    return _asyncToGenerator(function* () {\n      var response;\n\n      if (localStorage.getItem(\"user\") != null) {\n        var userId = localStorage.getItem(\"userId\");\n      }\n\n      var data = JSON.stringify({\n        user: userId,\n        livres: livres\n      });\n\n      try {\n        response = yield axios.post(\"http://localhost:3030/commandes\", data, {\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Content-Type': 'application/json'\n          }\n        });\n        var code = response.status;\n        return code == 201;\n      } catch (error) {\n        return false;\n      }\n    })();\n  }\n\n  getCommande(id) {\n    return _asyncToGenerator(function* () {\n      var response;\n\n      if (localStorage.getItem(\"user\") != null) {\n        var user = localStorage.getItem(\"user\");\n      }\n\n      var userId = user._id;\n\n      try {\n        response = yield axios.get(\"http://localhost:3030/commandes/\" + id, {\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Content-Type': 'application/json'\n          }\n        });\n        var code = response.status;\n        return code == 200;\n      } catch (error) {\n        return false;\n      }\n    })();\n  }\n\n}\n\nCommandeService.ɵfac = function CommandeService_Factory(t) {\n  return new (t || CommandeService)();\n};\n\nCommandeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CommandeService,\n  factory: CommandeService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:\\Users\\Utilisateur\\Desktop\\projet_angular\\src\\app\\commande.service.ts"],"names":[],"mappings":";AACA,OAAO,KAAP,MAAkB,OAAlB;;AAIA,OAAM,MAAO,eAAP,CAAsB;AAE1B,EAAA,WAAA,GAAA,CAAiB;;AACX,EAAA,eAAe,CAAC,MAAD,EAAc;AAAA;AACjC,UAAI,QAAJ;;AACA,UAAG,YAAY,CAAC,OAAb,CAAqB,MAArB,KAAgC,IAAnC,EAAyC;AACvC,YAAI,MAAM,GAAG,YAAY,CAAC,OAAb,CAAqB,QAArB,CAAb;AACD;;AACD,UAAI,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe;AAAE,QAAA,IAAI,EAAE,MAAR;AAAgB,QAAA,MAAM,EAAE;AAAxB,OAAf,CAAX;;AACA,UAAI;AACF,QAAA,QAAQ,SAAS,KAAK,CAAC,IAAN,CAAW,iCAAX,EAA8C,IAA9C,EAAoD;AAAC,UAAA,OAAO,EAAE;AAC7E,2CAA+B,GAD8C;AAE7E,4BAAgB;AAF6D;AAAV,SAApD,CAAjB;AAIA,YAAI,IAAI,GAAG,QAAQ,CAAC,MAApB;AACA,eAAO,IAAI,IAAI,GAAf;AACD,OAPD,CAOE,OAAO,KAAP,EAAc;AACd,eAAO,KAAP;AACD;AAfgC;AAgBlC;;AAEK,EAAA,WAAW,CAAC,EAAD,EAAW;AAAA;AAC1B,UAAI,QAAJ;;AACA,UAAG,YAAY,CAAC,OAAb,CAAqB,MAArB,KAAgC,IAAnC,EAAyC;AACvC,YAAI,IAAI,GAAG,YAAY,CAAC,OAAb,CAAqB,MAArB,CAAX;AACD;;AACD,UAAI,MAAM,GAAG,IAAI,CAAC,GAAlB;;AACA,UAAI;AACF,QAAA,QAAQ,SAAS,KAAK,CAAC,GAAN,CAAU,qCAAmC,EAA7C,EAAiD;AAAC,UAAA,OAAO,EAAE;AAC1E,2CAA+B,GAD2C;AAE1E,4BAAgB;AAF0D;AAAV,SAAjD,CAAjB;AAIA,YAAI,IAAI,GAAG,QAAQ,CAAC,MAApB;AACA,eAAO,IAAI,IAAI,GAAf;AACD,OAPD,CAOE,OAAO,KAAP,EAAc;AACd,eAAO,KAAP;AACD;AAfyB;AAgB3B;;AArCyB;;;mBAAf,e;AAAe,C;;;SAAf,e;AAAe,EAAA,OAAA,EAAf,eAAe,CAAA,I;AAAA,EAAA,UAAA,EAFd","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport axios from 'axios';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommandeService {\r\n\r\n  constructor() { }\r\n  async ajouterCommande(livres: any[]): Promise<any> {\r\n    var response;\r\n    if(localStorage.getItem(\"user\") != null) {\r\n      var userId = localStorage.getItem(\"userId\");\r\n    }\r\n    var data = JSON.stringify({ user: userId, livres: livres});\r\n    try {\r\n      response = await axios.post(\"http://localhost:3030/commandes\", data, {headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Content-Type': 'application/json'\r\n     }});\r\n      var code = response.status;\r\n      return code == 201;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async getCommande(id: string): Promise<any> {\r\n    var response;\r\n    if(localStorage.getItem(\"user\") != null) {\r\n      var user = localStorage.getItem(\"user\");\r\n    }\r\n    var userId = user._id;\r\n    try {\r\n      response = await axios.get(\"http://localhost:3030/commandes/\"+id, {headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Content-Type': 'application/json'\r\n     }});\r\n      var code = response.status;\r\n      return code == 200;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}