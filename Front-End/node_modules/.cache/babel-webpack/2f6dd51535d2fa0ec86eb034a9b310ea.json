{"ast":null,"code":"import _asyncToGenerator from \"/home/ababacar/Bureau/Master1/projet_angular/Front-End/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./partage.service\";\nexport class AuthenticationService {\n  constructor(partageService) {\n    this.partageService = partageService;\n  }\n\n  register(creds) {\n    return _asyncToGenerator(function* () {\n      var data = JSON.stringify({\n        \"nom\": creds.nom_complet,\n        \"email\": creds.email,\n        \"password\": creds.password1\n      });\n      var response;\n\n      try {\n        response = yield axios.post(\"http://localhost:3030/users\", data, {\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Content-Type': 'application/json'\n          }\n        });\n        var code = response.status;\n        return code == 201;\n      } catch (error) {\n        return false;\n      }\n    })();\n  }\n\n  login(creds) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var data = JSON.stringify({\n        \"email\": creds.email,\n        \"password\": creds.password,\n        \"strategy\": \"local\"\n      });\n      var response;\n\n      try {\n        response = yield axios.post(\"http://localhost:3030/authentication\", data, {\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Content-Type': 'application/json'\n          }\n        });\n        var code = response.status;\n        console.log(\"la rep\", response);\n\n        if (code == 201) {\n          var token = response.data.accessToken;\n          localStorage.setItem(\"accessToken\", token);\n          localStorage.setItem(\"nomClient\", response.data.user.nom);\n          localStorage.setItem(\"userId\", response.data.user._id);\n\n          _this.partageService.setAccessToken(token);\n\n          _this.partageService.setNom(response.data.user.nom);\n        }\n\n        return token && code == 201;\n      } catch (error) {\n        return false;\n      }\n    })();\n  }\n\n}\n\nAuthenticationService.ɵfac = function AuthenticationService_Factory(t) {\n  return new (t || AuthenticationService)(i0.ɵɵinject(i1.PartageService));\n};\n\nAuthenticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthenticationService,\n  factory: AuthenticationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/home/ababacar/Bureau/Master1/projet_angular/Front-End/src/app/authentication.service.ts"],"names":[],"mappings":";AACA,OAAO,KAAP,MAAkB,OAAlB;;;AAKA,OAAM,MAAO,qBAAP,CAA4B;AAEhC,EAAA,WAAA,CAAoB,cAApB,EAAmD;AAA/B,SAAA,cAAA,GAAA,cAAA;AAAoC;;AAClD,EAAA,QAAQ,CAAC,KAAD,EAAW;AAAA;AACvB,UAAI,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe;AAAC,eAAO,KAAK,CAAC,WAAd;AAA0B,iBAAQ,KAAK,CAAC,KAAxC;AAA8C,oBAAW,KAAK,CAAC;AAA/D,OAAf,CAAX;AACA,UAAI,QAAJ;;AACA,UAAI;AACF,QAAA,QAAQ,SAAS,KAAK,CAAC,IAAN,CAAW,6BAAX,EAA0C,IAA1C,EAAgD;AAAC,UAAA,OAAO,EAAE;AACzE,2CAA+B,GAD0C;AAEzE,4BAAgB;AAFyD;AAAV,SAAhD,CAAjB;AAIA,YAAI,IAAI,GAAG,QAAQ,CAAC,MAApB;AACA,eAAO,IAAI,IAAI,GAAf;AACD,OAPD,CAOE,OAAO,KAAP,EAAc;AACd,eAAO,KAAP;AACD;AAZsB;AAaxB;;AAGK,EAAA,KAAK,CAAC,KAAD,EAAW;AAAA;;AAAA;AACpB,UAAI,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe;AAAC,iBAAQ,KAAK,CAAC,KAAf;AAAqB,oBAAW,KAAK,CAAC,QAAtC;AAA+C,oBAAW;AAA1D,OAAf,CAAX;AACA,UAAI,QAAJ;;AACA,UAAI;AACF,QAAA,QAAQ,SAAS,KAAK,CAAC,IAAN,CAAW,sCAAX,EAAmD,IAAnD,EAAyD;AAAC,UAAA,OAAO,EAAE;AAClF,2CAA+B,GADmD;AAElF,4BAAgB;AAFkE;AAAV,SAAzD,CAAjB;AAIA,YAAI,IAAI,GAAG,QAAQ,CAAC,MAApB;AACA,QAAA,OAAO,CAAC,GAAR,CAAY,QAAZ,EAAsB,QAAtB;;AACA,YAAG,IAAI,IAAI,GAAX,EAAgB;AACd,cAAI,KAAK,GAAG,QAAQ,CAAC,IAAT,CAAc,WAA1B;AACA,UAAA,YAAY,CAAC,OAAb,CAAqB,aAArB,EAAoC,KAApC;AACA,UAAA,YAAY,CAAC,OAAb,CAAqB,WAArB,EAAkC,QAAQ,CAAC,IAAT,CAAc,IAAd,CAAmB,GAArD;AACA,UAAA,YAAY,CAAC,OAAb,CAAqB,QAArB,EAA+B,QAAQ,CAAC,IAAT,CAAc,IAAd,CAAmB,GAAlD;;AACA,UAAA,KAAI,CAAC,cAAL,CAAoB,cAApB,CAAmC,KAAnC;;AACA,UAAA,KAAI,CAAC,cAAL,CAAoB,MAApB,CAA2B,QAAQ,CAAC,IAAT,CAAc,IAAd,CAAmB,GAA9C;AACD;;AACD,eAAO,KAAK,IAAI,IAAI,IAAI,GAAxB;AACD,OAhBD,CAgBE,OAAO,KAAP,EAAc;AACd,eAAO,KAAP;AACD;AArBmB;AAsBrB;;AAzC+B;;;mBAArB,qB,EAAqB,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,cAAA,C;AAAA,C;;;SAArB,qB;AAAqB,EAAA,OAAA,EAArB,qBAAqB,CAAA,I;AAAA,EAAA,UAAA,EAFpB","sourcesContent":["import { Injectable } from '@angular/core';\nimport axios from 'axios';\nimport { PartageService } from './partage.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor(private partageService : PartageService) { }\n  async register(creds: any): Promise<any> {\n    var data = JSON.stringify({\"nom\": creds.nom_complet,\"email\":creds.email,\"password\":creds.password1});\n    var response;\n    try {\n      response = await axios.post(\"http://localhost:3030/users\", data, {headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json'\n     }});\n      var code = response.status;\n      return code == 201;\n    } catch (error) {\n      return false;\n    }\n  }\n\n\n  async login(creds: any): Promise<any> {\n    var data = JSON.stringify({\"email\":creds.email,\"password\":creds.password,\"strategy\":\"local\"});\n    var response;\n    try {\n      response = await axios.post(\"http://localhost:3030/authentication\", data, {headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json'\n     }});\n      var code = response.status;\n      console.log(\"la rep\", response);\n      if(code == 201) {\n        var token = response.data.accessToken;\n        localStorage.setItem(\"accessToken\", token);\n        localStorage.setItem(\"nomClient\", response.data.user.nom);\n        localStorage.setItem(\"userId\", response.data.user._id);\n        this.partageService.setAccessToken(token);\n        this.partageService.setNom(response.data.user.nom);\n      }\n      return token && code == 201;\n    } catch (error) {\n      return false;\n    }\n  }\n\n\n\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}