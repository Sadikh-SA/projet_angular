{"ast":null,"code":"import _asyncToGenerator from \"/home/maureen/projet_angular/Front-End/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport * as i0 from \"@angular/core\";\nexport class LivresService {\n  constructor() {}\n\n  shuffle(array) {\n    let currentIndex = array.length,\n        randomIndex;\n\n    while (currentIndex != 0) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--; // And swap it with the current element.\n\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n\n    return array;\n  }\n\n  getLivres() {\n    return _asyncToGenerator(function* () {\n      var response;\n\n      try {\n        response = yield axios.get(\"http://localhost:3030/livres\", {\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Content-Type': 'application/json'\n          }\n        });\n      } catch (error) {\n        return false;\n      }\n\n      return response.data.data;\n    })();\n  }\n\n  getLivre(id) {\n    return _asyncToGenerator(function* () {\n      var response;\n\n      try {\n        response = yield axios.get(\"http://localhost:3030/livres/\" + id, {\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Content-Type': 'application/json'\n          }\n        });\n      } catch (error) {\n        return false;\n      }\n\n      return response.data;\n    })();\n  }\n\n}\n\nLivresService.ɵfac = function LivresService_Factory(t) {\n  return new (t || LivresService)();\n};\n\nLivresService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LivresService,\n  factory: LivresService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/home/maureen/projet_angular/Front-End/src/app/livres.service.ts"],"names":[],"mappings":";AACA,OAAO,KAAP,MAAkB,OAAlB;;AAIA,OAAM,MAAO,aAAP,CAAoB;AAExB,EAAA,WAAA,GAAA,CAAiB;;AAEjB,EAAA,OAAO,CAAC,KAAD,EAAa;AAClB,QAAI,YAAY,GAAG,KAAK,CAAC,MAAzB;AAAA,QAAkC,WAAlC;;AACF,WAAO,YAAY,IAAI,CAAvB,EAA0B;AAEtB;AACA,MAAA,WAAW,GAAG,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAgB,YAA3B,CAAd;AACA,MAAA,YAAY,GAJU,CAMtB;;AACA,OAAC,KAAK,CAAC,YAAD,CAAN,EAAsB,KAAK,CAAC,WAAD,CAA3B,IAA4C,CAC1C,KAAK,CAAC,WAAD,CADqC,EACtB,KAAK,CAAC,YAAD,CADiB,CAA5C;AAED;;AAED,WAAO,KAAP;AACD;;AAEK,EAAA,SAAS,GAAA;AAAA;AACb,UAAI,QAAJ;;AACA,UAAI;AACF,QAAA,QAAQ,SAAS,KAAK,CAAC,GAAN,CAAU,8BAAV,EAA0C;AAAC,UAAA,OAAO,EAAE;AACnE,2CAA+B,GADoC;AAEnE,4BAAgB;AAFmD;AAAV,SAA1C,CAAjB;AAID,OALD,CAKE,OAAO,KAAP,EAAc;AACd,eAAO,KAAP;AACD;;AAED,aAAO,QAAQ,CAAC,IAAT,CAAc,IAArB;AAXa;AAYd;;AAEK,EAAA,QAAQ,CAAC,EAAD,EAAO;AAAA;AACnB,UAAI,QAAJ;;AACA,UAAI;AACF,QAAA,QAAQ,SAAS,KAAK,CAAC,GAAN,CAAU,kCAAgC,EAA1C,EAA8C;AAAC,UAAA,OAAO,EAAE;AACvE,2CAA+B,GADwC;AAEvE,4BAAgB;AAFuD;AAAV,SAA9C,CAAjB;AAID,OALD,CAKE,OAAO,KAAP,EAAc;AACd,eAAO,KAAP;AACD;;AAED,aAAO,QAAQ,CAAC,IAAhB;AAXmB;AAYpB;;AA9CuB;;;mBAAb,a;AAAa,C;;;SAAb,a;AAAa,EAAA,OAAA,EAAb,aAAa,CAAA,I;AAAA,EAAA,UAAA,EAFZ","sourcesContent":["import { Injectable } from '@angular/core';\nimport axios from 'axios';\n@Injectable({\n  providedIn: 'root'\n})\nexport class LivresService {\n\n  constructor() { }\n\n  shuffle(array: any[]) {\n    let currentIndex = array.length,  randomIndex;\n  while (currentIndex != 0) {\n  \n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n  \n      // And swap it with the current element.\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n  \n    return array;\n  }\n  \n  async getLivres(): Promise<any> {\n    var response;\n    try {\n      response = await axios.get(\"http://localhost:3030/livres\", {headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json'\n     }});\n    } catch (error) {\n      return false;\n    }\n\n    return response.data.data;\n  }\n\n  async getLivre(id:any): Promise<any> {\n    var response;\n    try {\n      response = await axios.get(\"http://localhost:3030/livres/\"+id, {headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json'\n     }});\n    } catch (error) {\n      return false;\n    }\n\n    return response.data;\n  }\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}