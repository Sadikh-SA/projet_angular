{"ast":null,"code":"import _asyncToGenerator from \"/home/ababacar/Bureau/Master1/projet_angular/Front-End/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component, Input, EventEmitter, Output } from '@angular/core';\nimport Swal from 'sweetalert2';\nlet LoginComponent = class LoginComponent {\n  constructor(authenticationService, route, aroute, partageService) {\n    this.route = route;\n    this.aroute = aroute;\n    this.partageService = partageService;\n    this.email = \"\";\n    this.submitted = new EventEmitter();\n    this.nom_complet = \"\";\n    this.action = \"\";\n    this.authenticationService = authenticationService;\n    this.aroute.queryParams.subscribe(params => {\n      this.action = params['action'];\n      console.log(\"blaaaaaaaaaaaaaa\", this.action);\n    });\n  }\n\n  ngOnInit() {//this.action = this.aroute.snapshot.paramMap.get('action');\n  }\n\n  register(data) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      console.log(data);\n      var response = \"\";\n\n      if (data.password1 !== data.password2) {\n        Swal.fire('Erreur', 'Les deux mots de passe entrés ne correspondent pas.', 'error');\n        return false;\n      }\n\n      response = yield _this.authenticationService.register(data);\n\n      if (response) {\n        Swal.fire('Terminé !', 'Votre inscription est terminée.', 'success').then(result => {\n          if (result) {\n            _this.route.navigate(['/auth']);\n          }\n        });\n      } else {\n        Swal.fire('Erreur', \"Quelque chose a pas marché. Reesayez !\", 'error');\n      }\n\n      return true;\n    })();\n  }\n\n  login(data) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      console.log(data);\n      var response = yield _this2.authenticationService.login(data);\n\n      if (!response) {\n        Swal.fire('Erreur de connexion', 'Votre email ou mot de passe est incorrect', 'error');\n      } else {\n        Swal.fire('Connexion réussie !', 'Vous etes connecté(e). Vous allez etre redigé(e)', 'success').then(result => {\n          if (result) {\n            // this.route.navigate(['/']);\n            if (_this2.action == \"validation-panier\") {\n              _this2.route.navigate(['/order-confirmation']);\n            } else {\n              //  window.location.replace('/');\n              _this2.route.navigate(['/']);\n            }\n          }\n        });\n      }\n    })();\n  }\n\n};\n\n__decorate([Input()], LoginComponent.prototype, \"email\", void 0);\n\n__decorate([Output()], LoginComponent.prototype, \"submitted\", void 0);\n\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"sources":["/home/ababacar/Bureau/Master1/projet_angular/Front-End/src/app/login/login.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport Swal from 'sweetalert2';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport { AuthenticationService } from '../Services/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  @Input()  email = \"\";\n  @Output() submitted = new EventEmitter<string>();\n  nom_complet = \"\";\n  authenticationService : AuthenticationService;\n \n  public action : string = \"\";\n  constructor(authenticationService : AuthenticationService,\n     private route:Router, private aroute: ActivatedRoute, private partageService:PartageService) {\n    this.authenticationService = authenticationService;\n    this.aroute.queryParams.subscribe((params: any) => {\n      this.action = params['action'];\n      console.log(\"blaaaaaaaaaaaaaa\",this.action);\n  });\n  \n  }\n\n  ngOnInit(): void {\n    //this.action = this.aroute.snapshot.paramMap.get('action');\n  }\n\n  async register(data: any) {\n    console.log(data);\n    var response = \"\";\n    if(data.password1 !== data.password2) {\n      Swal.fire(\n        'Erreur',\n        'Les deux mots de passe entrés ne correspondent pas.',\n        'error'\n      )\n      return false;\n    }\n    response = await this.authenticationService.register(data);\n     if(response) {\n      Swal.fire(\n        'Terminé !',\n        'Votre inscription est terminée.',\n        'success'\n      ).then((result) => {\n        if(result) {\n          this.route.navigate(['/auth']); \n        }\n      })\n    }\n    else {\n      Swal.fire(\n        'Erreur',\n        \"Quelque chose a pas marché. Reesayez !\",\n        'error'\n      )\n    }\n    return true;\n  }\n\n  async login(data: any) {\n    console.log(data);\n    var response = await this.authenticationService.login(data);\n    if(!response) {\n      Swal.fire(\n        'Erreur de connexion',\n        'Votre email ou mot de passe est incorrect',\n        'error'\n      )\n    }\n    else {\n      Swal.fire(\n        'Connexion réussie !',\n        'Vous etes connecté(e). Vous allez etre redigé(e)',\n        'success'\n      ).then((result) => {\n        if(result) {\n          // this.route.navigate(['/']);\n          if(this.action == \"validation-panier\"){\n            this.route.navigate(['/order-confirmation']);\n          }else {\n          //  window.location.replace('/');\n          this.route.navigate(['/']);\n          }\n        }\n      })\n    }\n  }\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}