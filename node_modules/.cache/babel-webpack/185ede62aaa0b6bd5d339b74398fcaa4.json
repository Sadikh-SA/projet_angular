{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Utilisateur/Desktop/projet_angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport * as i0 from \"@angular/core\";\nexport class AuthenticationService {\n  constructor() {}\n\n  register(creds) {\n    return _asyncToGenerator(function* () {\n      var data = JSON.stringify({\n        \"nom\": creds.nom_complet,\n        \"email\": creds.email,\n        \"password\": creds.password\n      });\n      var response;\n\n      try {\n        response = yield axios.post(\"http://localhost:3030/users\", data, {\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log(\"yo\", response);\n        var code = response.status;\n        return code == 201;\n      } catch (error) {\n        return false;\n      }\n    })();\n  }\n\n  login(creds) {\n    return _asyncToGenerator(function* () {\n      var data = JSON.stringify({\n        \"email\": creds.email,\n        \"password\": creds.password,\n        \"strategy\": \"local\"\n      });\n      var response;\n\n      try {\n        response = yield axios.post(\"http://localhost:3030/authentication\", data, {\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log(\"yo\", response);\n        var code = response.status;\n\n        if (code == 201) {\n          var token = response.data.accessToken;\n          localStorage.setItem(\"accessToken\", token);\n        }\n\n        return token && code == 201;\n      } catch (error) {\n        return false;\n      }\n    })();\n  }\n\n}\n\nAuthenticationService.ɵfac = function AuthenticationService_Factory(t) {\n  return new (t || AuthenticationService)();\n};\n\nAuthenticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthenticationService,\n  factory: AuthenticationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:\\Users\\Utilisateur\\Desktop\\projet_angular\\src\\app\\authentication.service.ts"],"names":[],"mappings":";AACA,OAAO,KAAP,MAAkB,OAAlB;;AAIA,OAAM,MAAO,qBAAP,CAA4B;AAEhC,EAAA,WAAA,GAAA,CAAiB;;AACX,EAAA,QAAQ,CAAC,KAAD,EAAW;AAAA;AACvB,UAAI,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe;AAAC,eAAO,KAAK,CAAC,WAAd;AAA0B,iBAAQ,KAAK,CAAC,KAAxC;AAA8C,oBAAW,KAAK,CAAC;AAA/D,OAAf,CAAX;AACA,UAAI,QAAJ;;AACA,UAAI;AACF,QAAA,QAAQ,SAAS,KAAK,CAAC,IAAN,CAAW,6BAAX,EAA0C,IAA1C,EAAgD;AAAC,UAAA,OAAO,EAAE;AACzE,2CAA+B,GAD0C;AAEzE,4BAAgB;AAFyD;AAAV,SAAhD,CAAjB;AAIA,QAAA,OAAO,CAAC,GAAR,CAAY,IAAZ,EAAiB,QAAjB;AACA,YAAI,IAAI,GAAG,QAAQ,CAAC,MAApB;AACA,eAAO,IAAI,IAAI,GAAf;AACD,OARD,CAQE,OAAO,KAAP,EAAc;AACd,eAAO,KAAP;AACD;AAbsB;AAcxB;;AAGK,EAAA,KAAK,CAAC,KAAD,EAAW;AAAA;AACpB,UAAI,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe;AAAC,iBAAQ,KAAK,CAAC,KAAf;AAAqB,oBAAW,KAAK,CAAC,QAAtC;AAA+C,oBAAW;AAA1D,OAAf,CAAX;AACA,UAAI,QAAJ;;AACA,UAAI;AACF,QAAA,QAAQ,SAAS,KAAK,CAAC,IAAN,CAAW,sCAAX,EAAmD,IAAnD,EAAyD;AAAC,UAAA,OAAO,EAAE;AAClF,2CAA+B,GADmD;AAElF,4BAAgB;AAFkE;AAAV,SAAzD,CAAjB;AAIA,QAAA,OAAO,CAAC,GAAR,CAAY,IAAZ,EAAiB,QAAjB;AACA,YAAI,IAAI,GAAG,QAAQ,CAAC,MAApB;;AACA,YAAG,IAAI,IAAI,GAAX,EAAgB;AACd,cAAI,KAAK,GAAG,QAAQ,CAAC,IAAT,CAAc,WAA1B;AACA,UAAA,YAAY,CAAC,OAAb,CAAqB,aAArB,EAAoC,KAApC;AACD;;AACD,eAAO,KAAK,IAAI,IAAI,IAAI,GAAxB;AACD,OAZD,CAYE,OAAO,KAAP,EAAc;AACd,eAAO,KAAP;AACD;AAjBmB;AAkBrB;;AAtC+B;;;mBAArB,qB;AAAqB,C;;;SAArB,qB;AAAqB,EAAA,OAAA,EAArB,qBAAqB,CAAA,I;AAAA,EAAA,UAAA,EAFpB","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport axios from 'axios';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n\r\n  constructor() { }\r\n  async register(creds: any): Promise<any> {\r\n    var data = JSON.stringify({\"nom\": creds.nom_complet,\"email\":creds.email,\"password\":creds.password});\r\n    var response;\r\n    try {\r\n      response = await axios.post(\"http://localhost:3030/users\", data, {headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Content-Type': 'application/json'\r\n     }});\r\n      console.log(\"yo\",response);\r\n      var code = response.status;\r\n      return code == 201;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n  async login(creds: any): Promise<any> {\r\n    var data = JSON.stringify({\"email\":creds.email,\"password\":creds.password,\"strategy\":\"local\"});\r\n    var response;\r\n    try {\r\n      response = await axios.post(\"http://localhost:3030/authentication\", data, {headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Content-Type': 'application/json'\r\n     }});\r\n      console.log(\"yo\",response);\r\n      var code = response.status;\r\n      if(code == 201) {\r\n        var token = response.data.accessToken;\r\n        localStorage.setItem(\"accessToken\", token);\r\n      }\r\n      return token && code == 201;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}